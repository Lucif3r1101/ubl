name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            ext: ""
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            ext: ".exe"
          - os: macos-latest
            target: x86_64-apple-darwin
            ext: ""

    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install dependencies for Linux .deb (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y fakeroot dpkg-dev

      - name: Install cargo-deb (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: cargo install cargo-deb

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare dist directory
        shell: bash
        run: mkdir -p dist

      - name: Build .deb package (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          cargo deb --no-build --target ${{ matrix.target }}
          cp target/${{ matrix.target }}/debian/*.deb dist/ubl-${{ matrix.target }}.deb

      - name: Compress macOS binary
        if: matrix.os == 'macos-latest'
        shell: bash
        run: |
          mkdir -p dist
          tar -czf dist/ubl-${{ matrix.target }}.tar.gz -C target/${{ matrix.target }}/release ubl

      - name: Prepare binary (Windows only)
        if: matrix.os == 'windows-latest'
        shell: bash
        run: |
          mkdir -p dist
          cp target/${{ matrix.target }}/release/ubl${{ matrix.ext }} dist/ubl-${{ matrix.target }}${{ matrix.ext }}

      - name: Upload release binaries
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
