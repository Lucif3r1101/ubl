name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            ext: ""
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            ext: ".exe"
          - os: macos-latest
            target: x86_64-apple-darwin
            ext: ""

    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare release artifact
        run: |
          mkdir dist
          
          # If macOS, compress into .tar.gz
          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            cd target/${{ matrix.target }}/release
            tar -czf ubl-${{ matrix.target }}.tar.gz ubl
            mv ubl-${{ matrix.target }}.tar.gz ../../../dist/
          else
            cp target/${{ matrix.target }}/release/ubl${{ matrix.ext }} dist/ubl-${{ matrix.target }}${{ matrix.ext }}
          fi

      - name: Upload release binaries
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
